- hosts: localhost
  connection: local
  become: yes

  vars:
    dir: /home/ubuntu/
    app_dir: /home/ubuntu/yummy_api

  tasks:
    - name: Update source list
      environment:
        LANG: "en_US.UTF-8"
        LC_ALL: "en_US.UTF-8"
        LC_CTYPE: "en_US.UTF-8"
      apt: name={{item}} update_cache=yes state=present
      with_items:
        - python-apt

    - name: add python3.6 external source
      apt_repository:
        repo: ppa:deadsnakes/ppa
        state: present
        update_cache: yes
    
    - name: install python3.6
      apt: 
        update_cache: yes
        name: "{{ item }}"
        state: present
      with_items:
        - python3.6
        - python3-pip
        - python3.6-dev
        - python3-gdbm

    # find a way to copy files
    - name: copy apt_pkg.so
      copy: remote_src=True src=/usr/lib/python3/dist-packages/apt_pkg.cpython-35m-x86_64-linux-gnu.so dest=/usr/lib/python3/dist-packages/apt_pkg.so

    - name: Set python3.5 with lower priority
      alternatives:
        name: python3
        link: /usr/bin/python3
        path: /usr/bin/python3.5
        priority: 1

    - name: Set python3.6 with higher priority
      alternatives:
        name: python3
        link: /usr/bin/python3
        path: /usr/bin/python3.6
        priority: 10

    - name: Install servers
      apt:
        name: "{{ item }}"
      with_items:
        - nginx
        - gunicorn

    - name: install python dependencies
      apt: 
        name: "{{ item }}"
        state: present
      with_items: 
        - build-essential
        - autoconf
        - libtool
        - pkg-config
        - python-opengl
        - python-imaging
        - python-pyrex
        - python-pyside.qtopengl
        - idle-python2.7
        - qt4-dev-tools
        - qt4-designer
        - libqtgui4
        - libqtcore4
        - libqt4-xml
        - libqt4-test
        - libqt4-script
        - libqt4-network
        - libqt4-dbus
        - python-qt4
        - python-qt4-gl
        - libgle3
        - python-dev
        - libssl-dev

    - name: install greenlet and gevent
      shell: |
        easy_install greenlet
        easy_install gevent

    - name: Install virtual environment
      shell: |
        cd ..
        sudo -H pip3 install virtualenv
        virtualenv -p python3 venv

    - name: Git clone repo
      git:
        repo: https://github.com/philophilo/yummy_api.git
        dest: "{{ app_dir }}"

    - name: install pip requirements
      shell: |
        pwd
        . /home/ubuntu/venv/bin/activate
        cd /home/ubuntu/yummy_api
        pip3 install -r requirements.txt

    - name: Nginx setup
      shell: |
        sudo systemctl start nginx
        sudo bash -c 'cat > /etc/nginx/sites-available/yummy <<EOF
        server {
            listen 80;
            server_name api2.philophilo.xyz;
            location / {
                proxy_pass http://127.0.0.1:8000/;
                proxy_set_header Host \$host;
                proxy_set_header X-Forwarded-Proto \$scheme;
                proxy_set_header X-Real-IP \$remote_addr;
                proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
            }
        }
        '
        sudo rm -rf /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default 
        sudo ln -s /etc/nginx/sites-available/yummy /etc/nginx/sites-enabled/

    - name: Database setup
      shell: |
        export DATABASE_URL='postgresql://philophilo:12345678@databasepsql.c4ecouwmxh9c.us-east-2.rds.amazonaws.com:5432/yummy'
        cd /home/ubuntu/yummy_api
        . /home/ubuntu/venv/bin/activate
        python manage.py db init
        python manage.py db migrate
        python manage.py db upgrade
      ignore_errors: yes

    - name: setup ssh certbot
      shell: |
        sudo add-apt-repository -y ppa:certbot/certbot
        sudo apt-get update
        sudo pip3 install cffi
        sudo apt-get install -y python-certbot-nginx
        sudo certbot --nginx
      responses:
        email: namaname@gmail.com
        agree: y
        server_name: 1
        number: 2


    - name: start Nginx
      shell: |
        sudo systemctl restart nginx # restart nginx
        sudo systemctl status nginx

    - name: setup supervisor
      shell: |
        sudo bash -c 'cat > /etc/supervisor/conf.d/yummy.conf <<EOF
        [program:yummy]
        command=/home/ubuntu/venv/bin/gunicorn run:app --preload -p rocket.pid -b 0.0.0.0:8000 --access-logfile "-"
        environment=DATABASE_URL="postgresql://philophilo:12345678@databasepsql.c4ecouwmxh9c.us-east-2.rds.amazonaws.com:5432/yummy"
        directory=/home/ubuntu/yummy_api
        user=ubuntu
        autostart=true
        autorestart=unexpected
        stdout_logfile=/home/ubuntu/gunicorn.log
        stderr_logfile=/home/ubuntu/gunicorn.err.log
        '

    - name: start the app
      shell:
        sudo supervisorctl reread
        sudo supervisorctl update
        sudo supervisorctl start yummy
        sudo mkdir /etc/systemd/system/nginx.service.d
        printf "[Service]\nExecStartPost=/bin/sleep 0.1\n" > override.conf
        sudo mv override.conf /etc/systemd/system/nginx.service.d/override.conf
        sudo systemctl daemon-reload
        sudo systemctl restart nginx 
